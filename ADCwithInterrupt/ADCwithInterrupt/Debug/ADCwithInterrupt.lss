
ADCwithInterrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000800  00000894  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000800  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800114  00800114  000008a8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000904  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000944  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ae4  00000000  00000000  0000098c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000976  00000000  00000000  00001470  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003c0  00000000  00000000  00001de6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a0  00000000  00000000  000021a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004c2  00000000  00000000  00002248  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000138  00000000  00000000  0000270a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00002842  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	47 c0       	rjmp	.+142    	; 0xe4 <__vector_21>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e0       	ldi	r30, 0x00	; 0
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 31       	cpi	r26, 0x14	; 20
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e1       	ldi	r26, 0x14	; 20
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 31       	cpi	r26, 0x1C	; 28
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	8e d0       	rcall	.+284    	; 0x1e0 <main>
  c4:	9b c3       	rjmp	.+1846   	; 0x7fc <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <UART1_transmit>:
	
	UCSR1C |= 0x06;
}

void UART1_transmit(char data) {
	while(!(UCSR1A & (1 << UDRE1)));
  c8:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
  cc:	95 ff       	sbrs	r25, 5
  ce:	fc cf       	rjmp	.-8      	; 0xc8 <UART1_transmit>
	UDR1 = data;
  d0:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
  d4:	08 95       	ret

000000d6 <UART1_receive>:
}

unsigned char UART1_receive() {
	while(!(UCSR1A  & (1 << RXC1 )));
  d6:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
  da:	88 23       	and	r24, r24
  dc:	e4 f7       	brge	.-8      	; 0xd6 <UART1_receive>
	return UDR1;
  de:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
}
  e2:	08 95       	ret

000000e4 <__vector_21>:
		sei();
		_delay_ms(1000);
    }
}

ISR(ADC_vect) {
  e4:	1f 92       	push	r1
  e6:	0f 92       	push	r0
  e8:	0f b6       	in	r0, 0x3f	; 63
  ea:	0f 92       	push	r0
  ec:	11 24       	eor	r1, r1
  ee:	2f 93       	push	r18
  f0:	8f 93       	push	r24
  f2:	9f 93       	push	r25
	ADCSRA |= ( 1 << ADSC);
  f4:	86 b1       	in	r24, 0x06	; 6
  f6:	80 64       	ori	r24, 0x40	; 64
  f8:	86 b9       	out	0x06, r24	; 6
	adcValue = ADC;
  fa:	84 b1       	in	r24, 0x04	; 4
  fc:	95 b1       	in	r25, 0x05	; 5
  fe:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x1>
 102:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
	
	if (adcValue > 400) {
 106:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 10a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 10e:	81 39       	cpi	r24, 0x91	; 145
 110:	91 40       	sbci	r25, 0x01	; 1
 112:	1c f0       	brlt	.+6      	; 0x11a <__vector_21+0x36>
		PORTB = 0x01;
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	88 bb       	out	0x18, r24	; 24
 118:	01 c0       	rjmp	.+2      	; 0x11c <__vector_21+0x38>
	}
	else {
		PORTB = 0x00;
 11a:	18 ba       	out	0x18, r1	; 24
	}
}
 11c:	9f 91       	pop	r25
 11e:	8f 91       	pop	r24
 120:	2f 91       	pop	r18
 122:	0f 90       	pop	r0
 124:	0f be       	out	0x3f, r0	; 63
 126:	0f 90       	pop	r0
 128:	1f 90       	pop	r1
 12a:	18 95       	reti

0000012c <UART1_init>:

void UART1_init(unsigned long int baudRate) {
	stdout = &INOUT;
 12c:	e6 e1       	ldi	r30, 0x16	; 22
 12e:	f1 e0       	ldi	r31, 0x01	; 1
 130:	20 e0       	ldi	r18, 0x00	; 0
 132:	31 e0       	ldi	r19, 0x01	; 1
 134:	33 83       	std	Z+3, r19	; 0x03
 136:	22 83       	std	Z+2, r18	; 0x02
	stdin = &INOUT;
 138:	31 83       	std	Z+1, r19	; 0x01
 13a:	20 83       	st	Z, r18
	int UBRR = (F_CPU / (8 * baudRate)) - 1;
 13c:	dc 01       	movw	r26, r24
 13e:	cb 01       	movw	r24, r22
 140:	88 0f       	add	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	aa 1f       	adc	r26, r26
 146:	bb 1f       	adc	r27, r27
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	aa 1f       	adc	r26, r26
 14e:	bb 1f       	adc	r27, r27
 150:	9c 01       	movw	r18, r24
 152:	ad 01       	movw	r20, r26
 154:	22 0f       	add	r18, r18
 156:	33 1f       	adc	r19, r19
 158:	44 1f       	adc	r20, r20
 15a:	55 1f       	adc	r21, r21
 15c:	60 e0       	ldi	r22, 0x00	; 0
 15e:	74 e2       	ldi	r23, 0x24	; 36
 160:	84 ef       	ldi	r24, 0xF4	; 244
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	69 d0       	rcall	.+210    	; 0x238 <__udivmodsi4>
 166:	21 50       	subi	r18, 0x01	; 1
 168:	31 09       	sbc	r19, r1
	UBRR1L |= UBRR % 0x100;
 16a:	40 91 99 00 	lds	r20, 0x0099	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 16e:	c9 01       	movw	r24, r18
 170:	90 78       	andi	r25, 0x80	; 128
 172:	99 23       	and	r25, r25
 174:	1c f4       	brge	.+6      	; 0x17c <UART1_init+0x50>
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	9f 6f       	ori	r25, 0xFF	; 255
 17a:	01 96       	adiw	r24, 0x01	; 1
 17c:	84 2b       	or	r24, r20
 17e:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
	UBRR1H |= UBRR / 0x100;
 182:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 186:	a9 01       	movw	r20, r18
 188:	33 23       	and	r19, r19
 18a:	14 f4       	brge	.+4      	; 0x190 <UART1_init+0x64>
 18c:	41 50       	subi	r20, 0x01	; 1
 18e:	5f 4f       	sbci	r21, 0xFF	; 255
 190:	85 2b       	or	r24, r21
 192:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	
	UCSR1A |= ( 1 << U2X1); // 2배속 모드
 196:	eb e9       	ldi	r30, 0x9B	; 155
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	80 81       	ld	r24, Z
 19c:	82 60       	ori	r24, 0x02	; 2
 19e:	80 83       	st	Z, r24
	
	UCSR1B |= ( 1 << RXEN1); // Receiver Enable
 1a0:	ea e9       	ldi	r30, 0x9A	; 154
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	80 81       	ld	r24, Z
 1a6:	80 61       	ori	r24, 0x10	; 16
 1a8:	80 83       	st	Z, r24
	UCSR1B |= ( 1 << TXEN1); // Transmitter Enable
 1aa:	80 81       	ld	r24, Z
 1ac:	88 60       	ori	r24, 0x08	; 8
 1ae:	80 83       	st	Z, r24
	
	UCSR1C |= 0x06;
 1b0:	ed e9       	ldi	r30, 0x9D	; 157
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	80 81       	ld	r24, Z
 1b6:	86 60       	ori	r24, 0x06	; 6
 1b8:	80 83       	st	Z, r24
 1ba:	08 95       	ret

000001bc <ADC_init>:
	while(!(UCSR1A  & (1 << RXC1 )));
	return UDR1;
}

void ADC_init() {
	ADCSRA |= (1 << ADEN); // ADC enable
 1bc:	86 b1       	in	r24, 0x06	; 6
 1be:	80 68       	ori	r24, 0x80	; 128
 1c0:	86 b9       	out	0x06, r24	; 6
	
	ADMUX |= (1 << REFS1); // set up external Vcc as reference voltage
 1c2:	87 b1       	in	r24, 0x07	; 7
 1c4:	80 68       	ori	r24, 0x80	; 128
 1c6:	87 b9       	out	0x07, r24	; 7
	ADMUX |= 0x00; // set up ADC0 -> PF0
 1c8:	87 b1       	in	r24, 0x07	; 7
 1ca:	87 b9       	out	0x07, r24	; 7
	
	ADCSRA |= 0x07; // 분주비 128Hz
 1cc:	86 b1       	in	r24, 0x06	; 6
 1ce:	87 60       	ori	r24, 0x07	; 7
 1d0:	86 b9       	out	0x06, r24	; 6
	ADCSRA |= (1 << ADSC); // ADC start converting
 1d2:	86 b1       	in	r24, 0x06	; 6
 1d4:	80 64       	ori	r24, 0x40	; 64
 1d6:	86 b9       	out	0x06, r24	; 6
	ADCSRA |= (1 << ADIE); // ADC interrupt Enable
 1d8:	86 b1       	in	r24, 0x06	; 6
 1da:	88 60       	ori	r24, 0x08	; 8
 1dc:	86 b9       	out	0x06, r24	; 6
 1de:	08 95       	ret

000001e0 <main>:

volatile int adcValue;

int main(void) {
	int localACD;
	UART1_init(9600);
 1e0:	60 e8       	ldi	r22, 0x80	; 128
 1e2:	75 e2       	ldi	r23, 0x25	; 37
 1e4:	80 e0       	ldi	r24, 0x00	; 0
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	a1 df       	rcall	.-190    	; 0x12c <UART1_init>
	ADC_init();
 1ea:	e8 df       	rcall	.-48     	; 0x1bc <ADC_init>
 1ec:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ee:	83 ed       	ldi	r24, 0xD3	; 211
 1f0:	90 e3       	ldi	r25, 0x30	; 48
 1f2:	21 50       	subi	r18, 0x01	; 1
 1f4:	80 40       	sbci	r24, 0x00	; 0
 1f6:	90 40       	sbci	r25, 0x00	; 0
 1f8:	e1 f7       	brne	.-8      	; 0x1f2 <main+0x12>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <main+0x1c>
 1fc:	00 00       	nop
 1fe:	81 e0       	ldi	r24, 0x01	; 1
	_delay_ms(1000);
	
    DDRB = 0x01;
 200:	87 bb       	out	0x17, r24	; 23
 202:	f8 94       	cli
    while (1) {
		cli();
 204:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
		localACD = adcValue;
 208:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 20c:	9f 93       	push	r25
		printf("%d\n\r", localACD);
 20e:	8f 93       	push	r24
 210:	8e e0       	ldi	r24, 0x0E	; 14
 212:	91 e0       	ldi	r25, 0x01	; 1
 214:	9f 93       	push	r25
 216:	8f 93       	push	r24
 218:	31 d0       	rcall	.+98     	; 0x27c <printf>
 21a:	78 94       	sei
		sei();
 21c:	2f ef       	ldi	r18, 0xFF	; 255
 21e:	83 ed       	ldi	r24, 0xD3	; 211
 220:	90 e3       	ldi	r25, 0x30	; 48
 222:	21 50       	subi	r18, 0x01	; 1
 224:	80 40       	sbci	r24, 0x00	; 0
 226:	90 40       	sbci	r25, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <main+0x42>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <main+0x4c>
 22c:	00 00       	nop
 22e:	0f 90       	pop	r0
 230:	0f 90       	pop	r0
 232:	0f 90       	pop	r0
 234:	0f 90       	pop	r0
 236:	e5 cf       	rjmp	.-54     	; 0x202 <main+0x22>

00000238 <__udivmodsi4>:
 238:	a1 e2       	ldi	r26, 0x21	; 33
 23a:	1a 2e       	mov	r1, r26
 23c:	aa 1b       	sub	r26, r26
 23e:	bb 1b       	sub	r27, r27
 240:	fd 01       	movw	r30, r26
 242:	0d c0       	rjmp	.+26     	; 0x25e <__udivmodsi4_ep>

00000244 <__udivmodsi4_loop>:
 244:	aa 1f       	adc	r26, r26
 246:	bb 1f       	adc	r27, r27
 248:	ee 1f       	adc	r30, r30
 24a:	ff 1f       	adc	r31, r31
 24c:	a2 17       	cp	r26, r18
 24e:	b3 07       	cpc	r27, r19
 250:	e4 07       	cpc	r30, r20
 252:	f5 07       	cpc	r31, r21
 254:	20 f0       	brcs	.+8      	; 0x25e <__udivmodsi4_ep>
 256:	a2 1b       	sub	r26, r18
 258:	b3 0b       	sbc	r27, r19
 25a:	e4 0b       	sbc	r30, r20
 25c:	f5 0b       	sbc	r31, r21

0000025e <__udivmodsi4_ep>:
 25e:	66 1f       	adc	r22, r22
 260:	77 1f       	adc	r23, r23
 262:	88 1f       	adc	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	1a 94       	dec	r1
 268:	69 f7       	brne	.-38     	; 0x244 <__udivmodsi4_loop>
 26a:	60 95       	com	r22
 26c:	70 95       	com	r23
 26e:	80 95       	com	r24
 270:	90 95       	com	r25
 272:	9b 01       	movw	r18, r22
 274:	ac 01       	movw	r20, r24
 276:	bd 01       	movw	r22, r26
 278:	cf 01       	movw	r24, r30
 27a:	08 95       	ret

0000027c <printf>:
 27c:	cf 93       	push	r28
 27e:	df 93       	push	r29
 280:	cd b7       	in	r28, 0x3d	; 61
 282:	de b7       	in	r29, 0x3e	; 62
 284:	ae 01       	movw	r20, r28
 286:	4b 5f       	subi	r20, 0xFB	; 251
 288:	5f 4f       	sbci	r21, 0xFF	; 255
 28a:	fa 01       	movw	r30, r20
 28c:	61 91       	ld	r22, Z+
 28e:	71 91       	ld	r23, Z+
 290:	af 01       	movw	r20, r30
 292:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__iob+0x2>
 296:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <__iob+0x3>
 29a:	03 d0       	rcall	.+6      	; 0x2a2 <vfprintf>
 29c:	df 91       	pop	r29
 29e:	cf 91       	pop	r28
 2a0:	08 95       	ret

000002a2 <vfprintf>:
 2a2:	2f 92       	push	r2
 2a4:	3f 92       	push	r3
 2a6:	4f 92       	push	r4
 2a8:	5f 92       	push	r5
 2aa:	6f 92       	push	r6
 2ac:	7f 92       	push	r7
 2ae:	8f 92       	push	r8
 2b0:	9f 92       	push	r9
 2b2:	af 92       	push	r10
 2b4:	bf 92       	push	r11
 2b6:	cf 92       	push	r12
 2b8:	df 92       	push	r13
 2ba:	ef 92       	push	r14
 2bc:	ff 92       	push	r15
 2be:	0f 93       	push	r16
 2c0:	1f 93       	push	r17
 2c2:	cf 93       	push	r28
 2c4:	df 93       	push	r29
 2c6:	cd b7       	in	r28, 0x3d	; 61
 2c8:	de b7       	in	r29, 0x3e	; 62
 2ca:	2b 97       	sbiw	r28, 0x0b	; 11
 2cc:	0f b6       	in	r0, 0x3f	; 63
 2ce:	f8 94       	cli
 2d0:	de bf       	out	0x3e, r29	; 62
 2d2:	0f be       	out	0x3f, r0	; 63
 2d4:	cd bf       	out	0x3d, r28	; 61
 2d6:	6c 01       	movw	r12, r24
 2d8:	7b 01       	movw	r14, r22
 2da:	8a 01       	movw	r16, r20
 2dc:	fc 01       	movw	r30, r24
 2de:	17 82       	std	Z+7, r1	; 0x07
 2e0:	16 82       	std	Z+6, r1	; 0x06
 2e2:	83 81       	ldd	r24, Z+3	; 0x03
 2e4:	81 ff       	sbrs	r24, 1
 2e6:	bf c1       	rjmp	.+894    	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 2e8:	ce 01       	movw	r24, r28
 2ea:	01 96       	adiw	r24, 0x01	; 1
 2ec:	3c 01       	movw	r6, r24
 2ee:	f6 01       	movw	r30, r12
 2f0:	93 81       	ldd	r25, Z+3	; 0x03
 2f2:	f7 01       	movw	r30, r14
 2f4:	93 fd       	sbrc	r25, 3
 2f6:	85 91       	lpm	r24, Z+
 2f8:	93 ff       	sbrs	r25, 3
 2fa:	81 91       	ld	r24, Z+
 2fc:	7f 01       	movw	r14, r30
 2fe:	88 23       	and	r24, r24
 300:	09 f4       	brne	.+2      	; 0x304 <vfprintf+0x62>
 302:	ad c1       	rjmp	.+858    	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 304:	85 32       	cpi	r24, 0x25	; 37
 306:	39 f4       	brne	.+14     	; 0x316 <vfprintf+0x74>
 308:	93 fd       	sbrc	r25, 3
 30a:	85 91       	lpm	r24, Z+
 30c:	93 ff       	sbrs	r25, 3
 30e:	81 91       	ld	r24, Z+
 310:	7f 01       	movw	r14, r30
 312:	85 32       	cpi	r24, 0x25	; 37
 314:	21 f4       	brne	.+8      	; 0x31e <vfprintf+0x7c>
 316:	b6 01       	movw	r22, r12
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	d6 d1       	rcall	.+940    	; 0x6c8 <fputc>
 31c:	e8 cf       	rjmp	.-48     	; 0x2ee <vfprintf+0x4c>
 31e:	91 2c       	mov	r9, r1
 320:	21 2c       	mov	r2, r1
 322:	31 2c       	mov	r3, r1
 324:	ff e1       	ldi	r31, 0x1F	; 31
 326:	f3 15       	cp	r31, r3
 328:	d8 f0       	brcs	.+54     	; 0x360 <vfprintf+0xbe>
 32a:	8b 32       	cpi	r24, 0x2B	; 43
 32c:	79 f0       	breq	.+30     	; 0x34c <vfprintf+0xaa>
 32e:	38 f4       	brcc	.+14     	; 0x33e <vfprintf+0x9c>
 330:	80 32       	cpi	r24, 0x20	; 32
 332:	79 f0       	breq	.+30     	; 0x352 <vfprintf+0xb0>
 334:	83 32       	cpi	r24, 0x23	; 35
 336:	a1 f4       	brne	.+40     	; 0x360 <vfprintf+0xbe>
 338:	23 2d       	mov	r18, r3
 33a:	20 61       	ori	r18, 0x10	; 16
 33c:	1d c0       	rjmp	.+58     	; 0x378 <vfprintf+0xd6>
 33e:	8d 32       	cpi	r24, 0x2D	; 45
 340:	61 f0       	breq	.+24     	; 0x35a <vfprintf+0xb8>
 342:	80 33       	cpi	r24, 0x30	; 48
 344:	69 f4       	brne	.+26     	; 0x360 <vfprintf+0xbe>
 346:	23 2d       	mov	r18, r3
 348:	21 60       	ori	r18, 0x01	; 1
 34a:	16 c0       	rjmp	.+44     	; 0x378 <vfprintf+0xd6>
 34c:	83 2d       	mov	r24, r3
 34e:	82 60       	ori	r24, 0x02	; 2
 350:	38 2e       	mov	r3, r24
 352:	e3 2d       	mov	r30, r3
 354:	e4 60       	ori	r30, 0x04	; 4
 356:	3e 2e       	mov	r3, r30
 358:	2a c0       	rjmp	.+84     	; 0x3ae <vfprintf+0x10c>
 35a:	f3 2d       	mov	r31, r3
 35c:	f8 60       	ori	r31, 0x08	; 8
 35e:	1d c0       	rjmp	.+58     	; 0x39a <vfprintf+0xf8>
 360:	37 fc       	sbrc	r3, 7
 362:	2d c0       	rjmp	.+90     	; 0x3be <vfprintf+0x11c>
 364:	20 ed       	ldi	r18, 0xD0	; 208
 366:	28 0f       	add	r18, r24
 368:	2a 30       	cpi	r18, 0x0A	; 10
 36a:	40 f0       	brcs	.+16     	; 0x37c <vfprintf+0xda>
 36c:	8e 32       	cpi	r24, 0x2E	; 46
 36e:	b9 f4       	brne	.+46     	; 0x39e <vfprintf+0xfc>
 370:	36 fc       	sbrc	r3, 6
 372:	75 c1       	rjmp	.+746    	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 374:	23 2d       	mov	r18, r3
 376:	20 64       	ori	r18, 0x40	; 64
 378:	32 2e       	mov	r3, r18
 37a:	19 c0       	rjmp	.+50     	; 0x3ae <vfprintf+0x10c>
 37c:	36 fe       	sbrs	r3, 6
 37e:	06 c0       	rjmp	.+12     	; 0x38c <vfprintf+0xea>
 380:	8a e0       	ldi	r24, 0x0A	; 10
 382:	98 9e       	mul	r9, r24
 384:	20 0d       	add	r18, r0
 386:	11 24       	eor	r1, r1
 388:	92 2e       	mov	r9, r18
 38a:	11 c0       	rjmp	.+34     	; 0x3ae <vfprintf+0x10c>
 38c:	ea e0       	ldi	r30, 0x0A	; 10
 38e:	2e 9e       	mul	r2, r30
 390:	20 0d       	add	r18, r0
 392:	11 24       	eor	r1, r1
 394:	22 2e       	mov	r2, r18
 396:	f3 2d       	mov	r31, r3
 398:	f0 62       	ori	r31, 0x20	; 32
 39a:	3f 2e       	mov	r3, r31
 39c:	08 c0       	rjmp	.+16     	; 0x3ae <vfprintf+0x10c>
 39e:	8c 36       	cpi	r24, 0x6C	; 108
 3a0:	21 f4       	brne	.+8      	; 0x3aa <vfprintf+0x108>
 3a2:	83 2d       	mov	r24, r3
 3a4:	80 68       	ori	r24, 0x80	; 128
 3a6:	38 2e       	mov	r3, r24
 3a8:	02 c0       	rjmp	.+4      	; 0x3ae <vfprintf+0x10c>
 3aa:	88 36       	cpi	r24, 0x68	; 104
 3ac:	41 f4       	brne	.+16     	; 0x3be <vfprintf+0x11c>
 3ae:	f7 01       	movw	r30, r14
 3b0:	93 fd       	sbrc	r25, 3
 3b2:	85 91       	lpm	r24, Z+
 3b4:	93 ff       	sbrs	r25, 3
 3b6:	81 91       	ld	r24, Z+
 3b8:	7f 01       	movw	r14, r30
 3ba:	81 11       	cpse	r24, r1
 3bc:	b3 cf       	rjmp	.-154    	; 0x324 <vfprintf+0x82>
 3be:	98 2f       	mov	r25, r24
 3c0:	9f 7d       	andi	r25, 0xDF	; 223
 3c2:	95 54       	subi	r25, 0x45	; 69
 3c4:	93 30       	cpi	r25, 0x03	; 3
 3c6:	28 f4       	brcc	.+10     	; 0x3d2 <vfprintf+0x130>
 3c8:	0c 5f       	subi	r16, 0xFC	; 252
 3ca:	1f 4f       	sbci	r17, 0xFF	; 255
 3cc:	9f e3       	ldi	r25, 0x3F	; 63
 3ce:	99 83       	std	Y+1, r25	; 0x01
 3d0:	0d c0       	rjmp	.+26     	; 0x3ec <vfprintf+0x14a>
 3d2:	83 36       	cpi	r24, 0x63	; 99
 3d4:	31 f0       	breq	.+12     	; 0x3e2 <vfprintf+0x140>
 3d6:	83 37       	cpi	r24, 0x73	; 115
 3d8:	71 f0       	breq	.+28     	; 0x3f6 <vfprintf+0x154>
 3da:	83 35       	cpi	r24, 0x53	; 83
 3dc:	09 f0       	breq	.+2      	; 0x3e0 <vfprintf+0x13e>
 3de:	55 c0       	rjmp	.+170    	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 3e0:	20 c0       	rjmp	.+64     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 3e2:	f8 01       	movw	r30, r16
 3e4:	80 81       	ld	r24, Z
 3e6:	89 83       	std	Y+1, r24	; 0x01
 3e8:	0e 5f       	subi	r16, 0xFE	; 254
 3ea:	1f 4f       	sbci	r17, 0xFF	; 255
 3ec:	88 24       	eor	r8, r8
 3ee:	83 94       	inc	r8
 3f0:	91 2c       	mov	r9, r1
 3f2:	53 01       	movw	r10, r6
 3f4:	12 c0       	rjmp	.+36     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3f6:	28 01       	movw	r4, r16
 3f8:	f2 e0       	ldi	r31, 0x02	; 2
 3fa:	4f 0e       	add	r4, r31
 3fc:	51 1c       	adc	r5, r1
 3fe:	f8 01       	movw	r30, r16
 400:	a0 80       	ld	r10, Z
 402:	b1 80       	ldd	r11, Z+1	; 0x01
 404:	36 fe       	sbrs	r3, 6
 406:	03 c0       	rjmp	.+6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 408:	69 2d       	mov	r22, r9
 40a:	70 e0       	ldi	r23, 0x00	; 0
 40c:	02 c0       	rjmp	.+4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40e:	6f ef       	ldi	r22, 0xFF	; 255
 410:	7f ef       	ldi	r23, 0xFF	; 255
 412:	c5 01       	movw	r24, r10
 414:	4e d1       	rcall	.+668    	; 0x6b2 <strnlen>
 416:	4c 01       	movw	r8, r24
 418:	82 01       	movw	r16, r4
 41a:	f3 2d       	mov	r31, r3
 41c:	ff 77       	andi	r31, 0x7F	; 127
 41e:	3f 2e       	mov	r3, r31
 420:	15 c0       	rjmp	.+42     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 422:	28 01       	movw	r4, r16
 424:	22 e0       	ldi	r18, 0x02	; 2
 426:	42 0e       	add	r4, r18
 428:	51 1c       	adc	r5, r1
 42a:	f8 01       	movw	r30, r16
 42c:	a0 80       	ld	r10, Z
 42e:	b1 80       	ldd	r11, Z+1	; 0x01
 430:	36 fe       	sbrs	r3, 6
 432:	03 c0       	rjmp	.+6      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 434:	69 2d       	mov	r22, r9
 436:	70 e0       	ldi	r23, 0x00	; 0
 438:	02 c0       	rjmp	.+4      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 43a:	6f ef       	ldi	r22, 0xFF	; 255
 43c:	7f ef       	ldi	r23, 0xFF	; 255
 43e:	c5 01       	movw	r24, r10
 440:	2d d1       	rcall	.+602    	; 0x69c <strnlen_P>
 442:	4c 01       	movw	r8, r24
 444:	f3 2d       	mov	r31, r3
 446:	f0 68       	ori	r31, 0x80	; 128
 448:	3f 2e       	mov	r3, r31
 44a:	82 01       	movw	r16, r4
 44c:	33 fc       	sbrc	r3, 3
 44e:	19 c0       	rjmp	.+50     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 450:	82 2d       	mov	r24, r2
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	88 16       	cp	r8, r24
 456:	99 06       	cpc	r9, r25
 458:	a0 f4       	brcc	.+40     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 45a:	b6 01       	movw	r22, r12
 45c:	80 e2       	ldi	r24, 0x20	; 32
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	33 d1       	rcall	.+614    	; 0x6c8 <fputc>
 462:	2a 94       	dec	r2
 464:	f5 cf       	rjmp	.-22     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 466:	f5 01       	movw	r30, r10
 468:	37 fc       	sbrc	r3, 7
 46a:	85 91       	lpm	r24, Z+
 46c:	37 fe       	sbrs	r3, 7
 46e:	81 91       	ld	r24, Z+
 470:	5f 01       	movw	r10, r30
 472:	b6 01       	movw	r22, r12
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	28 d1       	rcall	.+592    	; 0x6c8 <fputc>
 478:	21 10       	cpse	r2, r1
 47a:	2a 94       	dec	r2
 47c:	21 e0       	ldi	r18, 0x01	; 1
 47e:	82 1a       	sub	r8, r18
 480:	91 08       	sbc	r9, r1
 482:	81 14       	cp	r8, r1
 484:	91 04       	cpc	r9, r1
 486:	79 f7       	brne	.-34     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 488:	e1 c0       	rjmp	.+450    	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 48a:	84 36       	cpi	r24, 0x64	; 100
 48c:	11 f0       	breq	.+4      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 48e:	89 36       	cpi	r24, 0x69	; 105
 490:	39 f5       	brne	.+78     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 492:	f8 01       	movw	r30, r16
 494:	37 fe       	sbrs	r3, 7
 496:	07 c0       	rjmp	.+14     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 498:	60 81       	ld	r22, Z
 49a:	71 81       	ldd	r23, Z+1	; 0x01
 49c:	82 81       	ldd	r24, Z+2	; 0x02
 49e:	93 81       	ldd	r25, Z+3	; 0x03
 4a0:	0c 5f       	subi	r16, 0xFC	; 252
 4a2:	1f 4f       	sbci	r17, 0xFF	; 255
 4a4:	08 c0       	rjmp	.+16     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4a6:	60 81       	ld	r22, Z
 4a8:	71 81       	ldd	r23, Z+1	; 0x01
 4aa:	07 2e       	mov	r0, r23
 4ac:	00 0c       	add	r0, r0
 4ae:	88 0b       	sbc	r24, r24
 4b0:	99 0b       	sbc	r25, r25
 4b2:	0e 5f       	subi	r16, 0xFE	; 254
 4b4:	1f 4f       	sbci	r17, 0xFF	; 255
 4b6:	f3 2d       	mov	r31, r3
 4b8:	ff 76       	andi	r31, 0x6F	; 111
 4ba:	3f 2e       	mov	r3, r31
 4bc:	97 ff       	sbrs	r25, 7
 4be:	09 c0       	rjmp	.+18     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4c0:	90 95       	com	r25
 4c2:	80 95       	com	r24
 4c4:	70 95       	com	r23
 4c6:	61 95       	neg	r22
 4c8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ca:	8f 4f       	sbci	r24, 0xFF	; 255
 4cc:	9f 4f       	sbci	r25, 0xFF	; 255
 4ce:	f0 68       	ori	r31, 0x80	; 128
 4d0:	3f 2e       	mov	r3, r31
 4d2:	2a e0       	ldi	r18, 0x0A	; 10
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	a3 01       	movw	r20, r6
 4d8:	33 d1       	rcall	.+614    	; 0x740 <__ultoa_invert>
 4da:	88 2e       	mov	r8, r24
 4dc:	86 18       	sub	r8, r6
 4de:	44 c0       	rjmp	.+136    	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 4e0:	85 37       	cpi	r24, 0x75	; 117
 4e2:	31 f4       	brne	.+12     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4e4:	23 2d       	mov	r18, r3
 4e6:	2f 7e       	andi	r18, 0xEF	; 239
 4e8:	b2 2e       	mov	r11, r18
 4ea:	2a e0       	ldi	r18, 0x0A	; 10
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	25 c0       	rjmp	.+74     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 4f0:	93 2d       	mov	r25, r3
 4f2:	99 7f       	andi	r25, 0xF9	; 249
 4f4:	b9 2e       	mov	r11, r25
 4f6:	8f 36       	cpi	r24, 0x6F	; 111
 4f8:	c1 f0       	breq	.+48     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 4fa:	18 f4       	brcc	.+6      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4fc:	88 35       	cpi	r24, 0x58	; 88
 4fe:	79 f0       	breq	.+30     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 500:	ae c0       	rjmp	.+348    	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 502:	80 37       	cpi	r24, 0x70	; 112
 504:	19 f0       	breq	.+6      	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 506:	88 37       	cpi	r24, 0x78	; 120
 508:	21 f0       	breq	.+8      	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 50a:	a9 c0       	rjmp	.+338    	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 50c:	e9 2f       	mov	r30, r25
 50e:	e0 61       	ori	r30, 0x10	; 16
 510:	be 2e       	mov	r11, r30
 512:	b4 fe       	sbrs	r11, 4
 514:	0d c0       	rjmp	.+26     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 516:	fb 2d       	mov	r31, r11
 518:	f4 60       	ori	r31, 0x04	; 4
 51a:	bf 2e       	mov	r11, r31
 51c:	09 c0       	rjmp	.+18     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 51e:	34 fe       	sbrs	r3, 4
 520:	0a c0       	rjmp	.+20     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 522:	29 2f       	mov	r18, r25
 524:	26 60       	ori	r18, 0x06	; 6
 526:	b2 2e       	mov	r11, r18
 528:	06 c0       	rjmp	.+12     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 52a:	28 e0       	ldi	r18, 0x08	; 8
 52c:	30 e0       	ldi	r19, 0x00	; 0
 52e:	05 c0       	rjmp	.+10     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 530:	20 e1       	ldi	r18, 0x10	; 16
 532:	30 e0       	ldi	r19, 0x00	; 0
 534:	02 c0       	rjmp	.+4      	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 536:	20 e1       	ldi	r18, 0x10	; 16
 538:	32 e0       	ldi	r19, 0x02	; 2
 53a:	f8 01       	movw	r30, r16
 53c:	b7 fe       	sbrs	r11, 7
 53e:	07 c0       	rjmp	.+14     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 540:	60 81       	ld	r22, Z
 542:	71 81       	ldd	r23, Z+1	; 0x01
 544:	82 81       	ldd	r24, Z+2	; 0x02
 546:	93 81       	ldd	r25, Z+3	; 0x03
 548:	0c 5f       	subi	r16, 0xFC	; 252
 54a:	1f 4f       	sbci	r17, 0xFF	; 255
 54c:	06 c0       	rjmp	.+12     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 54e:	60 81       	ld	r22, Z
 550:	71 81       	ldd	r23, Z+1	; 0x01
 552:	80 e0       	ldi	r24, 0x00	; 0
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	0e 5f       	subi	r16, 0xFE	; 254
 558:	1f 4f       	sbci	r17, 0xFF	; 255
 55a:	a3 01       	movw	r20, r6
 55c:	f1 d0       	rcall	.+482    	; 0x740 <__ultoa_invert>
 55e:	88 2e       	mov	r8, r24
 560:	86 18       	sub	r8, r6
 562:	fb 2d       	mov	r31, r11
 564:	ff 77       	andi	r31, 0x7F	; 127
 566:	3f 2e       	mov	r3, r31
 568:	36 fe       	sbrs	r3, 6
 56a:	0d c0       	rjmp	.+26     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 56c:	23 2d       	mov	r18, r3
 56e:	2e 7f       	andi	r18, 0xFE	; 254
 570:	a2 2e       	mov	r10, r18
 572:	89 14       	cp	r8, r9
 574:	58 f4       	brcc	.+22     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 576:	34 fe       	sbrs	r3, 4
 578:	0b c0       	rjmp	.+22     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 57a:	32 fc       	sbrc	r3, 2
 57c:	09 c0       	rjmp	.+18     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 57e:	83 2d       	mov	r24, r3
 580:	8e 7e       	andi	r24, 0xEE	; 238
 582:	a8 2e       	mov	r10, r24
 584:	05 c0       	rjmp	.+10     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 586:	b8 2c       	mov	r11, r8
 588:	a3 2c       	mov	r10, r3
 58a:	03 c0       	rjmp	.+6      	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 58c:	b8 2c       	mov	r11, r8
 58e:	01 c0       	rjmp	.+2      	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 590:	b9 2c       	mov	r11, r9
 592:	a4 fe       	sbrs	r10, 4
 594:	0f c0       	rjmp	.+30     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 596:	fe 01       	movw	r30, r28
 598:	e8 0d       	add	r30, r8
 59a:	f1 1d       	adc	r31, r1
 59c:	80 81       	ld	r24, Z
 59e:	80 33       	cpi	r24, 0x30	; 48
 5a0:	21 f4       	brne	.+8      	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 5a2:	9a 2d       	mov	r25, r10
 5a4:	99 7e       	andi	r25, 0xE9	; 233
 5a6:	a9 2e       	mov	r10, r25
 5a8:	09 c0       	rjmp	.+18     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5aa:	a2 fe       	sbrs	r10, 2
 5ac:	06 c0       	rjmp	.+12     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5ae:	b3 94       	inc	r11
 5b0:	b3 94       	inc	r11
 5b2:	04 c0       	rjmp	.+8      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5b4:	8a 2d       	mov	r24, r10
 5b6:	86 78       	andi	r24, 0x86	; 134
 5b8:	09 f0       	breq	.+2      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5ba:	b3 94       	inc	r11
 5bc:	a3 fc       	sbrc	r10, 3
 5be:	10 c0       	rjmp	.+32     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5c0:	a0 fe       	sbrs	r10, 0
 5c2:	06 c0       	rjmp	.+12     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5c4:	b2 14       	cp	r11, r2
 5c6:	80 f4       	brcc	.+32     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5c8:	28 0c       	add	r2, r8
 5ca:	92 2c       	mov	r9, r2
 5cc:	9b 18       	sub	r9, r11
 5ce:	0d c0       	rjmp	.+26     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5d0:	b2 14       	cp	r11, r2
 5d2:	58 f4       	brcc	.+22     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5d4:	b6 01       	movw	r22, r12
 5d6:	80 e2       	ldi	r24, 0x20	; 32
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	76 d0       	rcall	.+236    	; 0x6c8 <fputc>
 5dc:	b3 94       	inc	r11
 5de:	f8 cf       	rjmp	.-16     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5e0:	b2 14       	cp	r11, r2
 5e2:	18 f4       	brcc	.+6      	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5e4:	2b 18       	sub	r2, r11
 5e6:	02 c0       	rjmp	.+4      	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5e8:	98 2c       	mov	r9, r8
 5ea:	21 2c       	mov	r2, r1
 5ec:	a4 fe       	sbrs	r10, 4
 5ee:	0f c0       	rjmp	.+30     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5f0:	b6 01       	movw	r22, r12
 5f2:	80 e3       	ldi	r24, 0x30	; 48
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	68 d0       	rcall	.+208    	; 0x6c8 <fputc>
 5f8:	a2 fe       	sbrs	r10, 2
 5fa:	16 c0       	rjmp	.+44     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 5fc:	a1 fc       	sbrc	r10, 1
 5fe:	03 c0       	rjmp	.+6      	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 600:	88 e7       	ldi	r24, 0x78	; 120
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	02 c0       	rjmp	.+4      	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 606:	88 e5       	ldi	r24, 0x58	; 88
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	b6 01       	movw	r22, r12
 60c:	0c c0       	rjmp	.+24     	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 60e:	8a 2d       	mov	r24, r10
 610:	86 78       	andi	r24, 0x86	; 134
 612:	51 f0       	breq	.+20     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 614:	a1 fe       	sbrs	r10, 1
 616:	02 c0       	rjmp	.+4      	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 618:	8b e2       	ldi	r24, 0x2B	; 43
 61a:	01 c0       	rjmp	.+2      	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 61c:	80 e2       	ldi	r24, 0x20	; 32
 61e:	a7 fc       	sbrc	r10, 7
 620:	8d e2       	ldi	r24, 0x2D	; 45
 622:	b6 01       	movw	r22, r12
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	50 d0       	rcall	.+160    	; 0x6c8 <fputc>
 628:	89 14       	cp	r8, r9
 62a:	30 f4       	brcc	.+12     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 62c:	b6 01       	movw	r22, r12
 62e:	80 e3       	ldi	r24, 0x30	; 48
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	4a d0       	rcall	.+148    	; 0x6c8 <fputc>
 634:	9a 94       	dec	r9
 636:	f8 cf       	rjmp	.-16     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 638:	8a 94       	dec	r8
 63a:	f3 01       	movw	r30, r6
 63c:	e8 0d       	add	r30, r8
 63e:	f1 1d       	adc	r31, r1
 640:	80 81       	ld	r24, Z
 642:	b6 01       	movw	r22, r12
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	40 d0       	rcall	.+128    	; 0x6c8 <fputc>
 648:	81 10       	cpse	r8, r1
 64a:	f6 cf       	rjmp	.-20     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 64c:	22 20       	and	r2, r2
 64e:	09 f4       	brne	.+2      	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 650:	4e ce       	rjmp	.-868    	; 0x2ee <vfprintf+0x4c>
 652:	b6 01       	movw	r22, r12
 654:	80 e2       	ldi	r24, 0x20	; 32
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	37 d0       	rcall	.+110    	; 0x6c8 <fputc>
 65a:	2a 94       	dec	r2
 65c:	f7 cf       	rjmp	.-18     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 65e:	f6 01       	movw	r30, r12
 660:	86 81       	ldd	r24, Z+6	; 0x06
 662:	97 81       	ldd	r25, Z+7	; 0x07
 664:	02 c0       	rjmp	.+4      	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 666:	8f ef       	ldi	r24, 0xFF	; 255
 668:	9f ef       	ldi	r25, 0xFF	; 255
 66a:	2b 96       	adiw	r28, 0x0b	; 11
 66c:	0f b6       	in	r0, 0x3f	; 63
 66e:	f8 94       	cli
 670:	de bf       	out	0x3e, r29	; 62
 672:	0f be       	out	0x3f, r0	; 63
 674:	cd bf       	out	0x3d, r28	; 61
 676:	df 91       	pop	r29
 678:	cf 91       	pop	r28
 67a:	1f 91       	pop	r17
 67c:	0f 91       	pop	r16
 67e:	ff 90       	pop	r15
 680:	ef 90       	pop	r14
 682:	df 90       	pop	r13
 684:	cf 90       	pop	r12
 686:	bf 90       	pop	r11
 688:	af 90       	pop	r10
 68a:	9f 90       	pop	r9
 68c:	8f 90       	pop	r8
 68e:	7f 90       	pop	r7
 690:	6f 90       	pop	r6
 692:	5f 90       	pop	r5
 694:	4f 90       	pop	r4
 696:	3f 90       	pop	r3
 698:	2f 90       	pop	r2
 69a:	08 95       	ret

0000069c <strnlen_P>:
 69c:	fc 01       	movw	r30, r24
 69e:	05 90       	lpm	r0, Z+
 6a0:	61 50       	subi	r22, 0x01	; 1
 6a2:	70 40       	sbci	r23, 0x00	; 0
 6a4:	01 10       	cpse	r0, r1
 6a6:	d8 f7       	brcc	.-10     	; 0x69e <strnlen_P+0x2>
 6a8:	80 95       	com	r24
 6aa:	90 95       	com	r25
 6ac:	8e 0f       	add	r24, r30
 6ae:	9f 1f       	adc	r25, r31
 6b0:	08 95       	ret

000006b2 <strnlen>:
 6b2:	fc 01       	movw	r30, r24
 6b4:	61 50       	subi	r22, 0x01	; 1
 6b6:	70 40       	sbci	r23, 0x00	; 0
 6b8:	01 90       	ld	r0, Z+
 6ba:	01 10       	cpse	r0, r1
 6bc:	d8 f7       	brcc	.-10     	; 0x6b4 <strnlen+0x2>
 6be:	80 95       	com	r24
 6c0:	90 95       	com	r25
 6c2:	8e 0f       	add	r24, r30
 6c4:	9f 1f       	adc	r25, r31
 6c6:	08 95       	ret

000006c8 <fputc>:
 6c8:	0f 93       	push	r16
 6ca:	1f 93       	push	r17
 6cc:	cf 93       	push	r28
 6ce:	df 93       	push	r29
 6d0:	fb 01       	movw	r30, r22
 6d2:	23 81       	ldd	r18, Z+3	; 0x03
 6d4:	21 fd       	sbrc	r18, 1
 6d6:	03 c0       	rjmp	.+6      	; 0x6de <fputc+0x16>
 6d8:	8f ef       	ldi	r24, 0xFF	; 255
 6da:	9f ef       	ldi	r25, 0xFF	; 255
 6dc:	2c c0       	rjmp	.+88     	; 0x736 <fputc+0x6e>
 6de:	22 ff       	sbrs	r18, 2
 6e0:	16 c0       	rjmp	.+44     	; 0x70e <fputc+0x46>
 6e2:	46 81       	ldd	r20, Z+6	; 0x06
 6e4:	57 81       	ldd	r21, Z+7	; 0x07
 6e6:	24 81       	ldd	r18, Z+4	; 0x04
 6e8:	35 81       	ldd	r19, Z+5	; 0x05
 6ea:	42 17       	cp	r20, r18
 6ec:	53 07       	cpc	r21, r19
 6ee:	44 f4       	brge	.+16     	; 0x700 <fputc+0x38>
 6f0:	a0 81       	ld	r26, Z
 6f2:	b1 81       	ldd	r27, Z+1	; 0x01
 6f4:	9d 01       	movw	r18, r26
 6f6:	2f 5f       	subi	r18, 0xFF	; 255
 6f8:	3f 4f       	sbci	r19, 0xFF	; 255
 6fa:	31 83       	std	Z+1, r19	; 0x01
 6fc:	20 83       	st	Z, r18
 6fe:	8c 93       	st	X, r24
 700:	26 81       	ldd	r18, Z+6	; 0x06
 702:	37 81       	ldd	r19, Z+7	; 0x07
 704:	2f 5f       	subi	r18, 0xFF	; 255
 706:	3f 4f       	sbci	r19, 0xFF	; 255
 708:	37 83       	std	Z+7, r19	; 0x07
 70a:	26 83       	std	Z+6, r18	; 0x06
 70c:	14 c0       	rjmp	.+40     	; 0x736 <fputc+0x6e>
 70e:	8b 01       	movw	r16, r22
 710:	ec 01       	movw	r28, r24
 712:	fb 01       	movw	r30, r22
 714:	00 84       	ldd	r0, Z+8	; 0x08
 716:	f1 85       	ldd	r31, Z+9	; 0x09
 718:	e0 2d       	mov	r30, r0
 71a:	09 95       	icall
 71c:	89 2b       	or	r24, r25
 71e:	e1 f6       	brne	.-72     	; 0x6d8 <fputc+0x10>
 720:	d8 01       	movw	r26, r16
 722:	16 96       	adiw	r26, 0x06	; 6
 724:	8d 91       	ld	r24, X+
 726:	9c 91       	ld	r25, X
 728:	17 97       	sbiw	r26, 0x07	; 7
 72a:	01 96       	adiw	r24, 0x01	; 1
 72c:	17 96       	adiw	r26, 0x07	; 7
 72e:	9c 93       	st	X, r25
 730:	8e 93       	st	-X, r24
 732:	16 97       	sbiw	r26, 0x06	; 6
 734:	ce 01       	movw	r24, r28
 736:	df 91       	pop	r29
 738:	cf 91       	pop	r28
 73a:	1f 91       	pop	r17
 73c:	0f 91       	pop	r16
 73e:	08 95       	ret

00000740 <__ultoa_invert>:
 740:	fa 01       	movw	r30, r20
 742:	aa 27       	eor	r26, r26
 744:	28 30       	cpi	r18, 0x08	; 8
 746:	51 f1       	breq	.+84     	; 0x79c <__ultoa_invert+0x5c>
 748:	20 31       	cpi	r18, 0x10	; 16
 74a:	81 f1       	breq	.+96     	; 0x7ac <__ultoa_invert+0x6c>
 74c:	e8 94       	clt
 74e:	6f 93       	push	r22
 750:	6e 7f       	andi	r22, 0xFE	; 254
 752:	6e 5f       	subi	r22, 0xFE	; 254
 754:	7f 4f       	sbci	r23, 0xFF	; 255
 756:	8f 4f       	sbci	r24, 0xFF	; 255
 758:	9f 4f       	sbci	r25, 0xFF	; 255
 75a:	af 4f       	sbci	r26, 0xFF	; 255
 75c:	b1 e0       	ldi	r27, 0x01	; 1
 75e:	3e d0       	rcall	.+124    	; 0x7dc <__ultoa_invert+0x9c>
 760:	b4 e0       	ldi	r27, 0x04	; 4
 762:	3c d0       	rcall	.+120    	; 0x7dc <__ultoa_invert+0x9c>
 764:	67 0f       	add	r22, r23
 766:	78 1f       	adc	r23, r24
 768:	89 1f       	adc	r24, r25
 76a:	9a 1f       	adc	r25, r26
 76c:	a1 1d       	adc	r26, r1
 76e:	68 0f       	add	r22, r24
 770:	79 1f       	adc	r23, r25
 772:	8a 1f       	adc	r24, r26
 774:	91 1d       	adc	r25, r1
 776:	a1 1d       	adc	r26, r1
 778:	6a 0f       	add	r22, r26
 77a:	71 1d       	adc	r23, r1
 77c:	81 1d       	adc	r24, r1
 77e:	91 1d       	adc	r25, r1
 780:	a1 1d       	adc	r26, r1
 782:	20 d0       	rcall	.+64     	; 0x7c4 <__ultoa_invert+0x84>
 784:	09 f4       	brne	.+2      	; 0x788 <__ultoa_invert+0x48>
 786:	68 94       	set
 788:	3f 91       	pop	r19
 78a:	2a e0       	ldi	r18, 0x0A	; 10
 78c:	26 9f       	mul	r18, r22
 78e:	11 24       	eor	r1, r1
 790:	30 19       	sub	r19, r0
 792:	30 5d       	subi	r19, 0xD0	; 208
 794:	31 93       	st	Z+, r19
 796:	de f6       	brtc	.-74     	; 0x74e <__ultoa_invert+0xe>
 798:	cf 01       	movw	r24, r30
 79a:	08 95       	ret
 79c:	46 2f       	mov	r20, r22
 79e:	47 70       	andi	r20, 0x07	; 7
 7a0:	40 5d       	subi	r20, 0xD0	; 208
 7a2:	41 93       	st	Z+, r20
 7a4:	b3 e0       	ldi	r27, 0x03	; 3
 7a6:	0f d0       	rcall	.+30     	; 0x7c6 <__ultoa_invert+0x86>
 7a8:	c9 f7       	brne	.-14     	; 0x79c <__ultoa_invert+0x5c>
 7aa:	f6 cf       	rjmp	.-20     	; 0x798 <__ultoa_invert+0x58>
 7ac:	46 2f       	mov	r20, r22
 7ae:	4f 70       	andi	r20, 0x0F	; 15
 7b0:	40 5d       	subi	r20, 0xD0	; 208
 7b2:	4a 33       	cpi	r20, 0x3A	; 58
 7b4:	18 f0       	brcs	.+6      	; 0x7bc <__ultoa_invert+0x7c>
 7b6:	49 5d       	subi	r20, 0xD9	; 217
 7b8:	31 fd       	sbrc	r19, 1
 7ba:	40 52       	subi	r20, 0x20	; 32
 7bc:	41 93       	st	Z+, r20
 7be:	02 d0       	rcall	.+4      	; 0x7c4 <__ultoa_invert+0x84>
 7c0:	a9 f7       	brne	.-22     	; 0x7ac <__ultoa_invert+0x6c>
 7c2:	ea cf       	rjmp	.-44     	; 0x798 <__ultoa_invert+0x58>
 7c4:	b4 e0       	ldi	r27, 0x04	; 4
 7c6:	a6 95       	lsr	r26
 7c8:	97 95       	ror	r25
 7ca:	87 95       	ror	r24
 7cc:	77 95       	ror	r23
 7ce:	67 95       	ror	r22
 7d0:	ba 95       	dec	r27
 7d2:	c9 f7       	brne	.-14     	; 0x7c6 <__ultoa_invert+0x86>
 7d4:	00 97       	sbiw	r24, 0x00	; 0
 7d6:	61 05       	cpc	r22, r1
 7d8:	71 05       	cpc	r23, r1
 7da:	08 95       	ret
 7dc:	9b 01       	movw	r18, r22
 7de:	ac 01       	movw	r20, r24
 7e0:	0a 2e       	mov	r0, r26
 7e2:	06 94       	lsr	r0
 7e4:	57 95       	ror	r21
 7e6:	47 95       	ror	r20
 7e8:	37 95       	ror	r19
 7ea:	27 95       	ror	r18
 7ec:	ba 95       	dec	r27
 7ee:	c9 f7       	brne	.-14     	; 0x7e2 <__ultoa_invert+0xa2>
 7f0:	62 0f       	add	r22, r18
 7f2:	73 1f       	adc	r23, r19
 7f4:	84 1f       	adc	r24, r20
 7f6:	95 1f       	adc	r25, r21
 7f8:	a0 1d       	adc	r26, r0
 7fa:	08 95       	ret

000007fc <_exit>:
 7fc:	f8 94       	cli

000007fe <__stop_program>:
 7fe:	ff cf       	rjmp	.-2      	; 0x7fe <__stop_program>
